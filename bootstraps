#!/bin/bash

SCRIPT=`realpath $0`
SOURCE="`realpath $(pwd)`/*"
DEST="$HOME/.config/nvim"
url='https://github.com/neovim/neovim/releases/download/nightly/nvim.appimage'

copy_config() {
  [[ -d ~/.config/nvim ]]&& \
    ( echo 'neovim config exists!' && exit ) \
    || ( mkdir -pv ~/.config/nvim ; cp -rvf $SOURCE $DEST )
}

get_plugs() {
  plugs=($( cat plugins ))

  [[ -d ~/.config/nvim/ ]]&& \
    ( echo "~/.config/nvim/ exists!" && exit ) \
    || ( mkdir -vp ~/.config/nvim/plugs )

  for p in ${plugs[@]}
  do
    git clone "https://github.com/$p" "$HOME/.config/nvim/plugs/$p"
  done
}

install_minimap() {
  arch=$(lscpu|awk -F '{print $2}')

  [[ $arch ]] && sudo cp .minimap/$arch /usr/sbin/
}

install_neovim() {
  pushd /tmp/
  ( curl -L $url -o nvim.appimage && \
    ( chmod u+x nvim.appimage ) && \
    ( ./nvim.appimage --appimage-extract ) && \
    ( sudo cp -rf ./squashfs-root/usr/ /) && \
    (sudo rm -rf ./squashfs-root nvim.appimage)
  ) && ( echo 'neovim Installed!' )
  popd
}

# copy_config
# get_plugs
# printf "call \033[0;36minstall_neovim\033[0m to build nightly\n"


[[ $# == 0 ]] && \
  ( copy_config && \
    get_plugs && \
    install_minimap && \
    install_neovim )


case $1 in 
  -c|--config)
    printf "copy_config\n"
  ;;
  -p|--plugins)
    printf "get_plugs"
  ;;
  -h|--help)
    printf "bootstraps:\n  -c copy configuration only\n  -p config and plugins\n  default: install neovim, copy config, plugins, and install code-minimap\n"
  ;;
esac
