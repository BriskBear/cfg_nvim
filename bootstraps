#!/bin/bash

SCRIPT=`realpath $0`
SOURCE="`realpath $(pwd)`"
DEST="$HOME/.config/nvim"
url='https://github.com/neovim/neovim/releases/download/nightly/nvim.appimage'

copy_config() {
  [[ -d ~/.config/nvim ]]&& \
    ( echo 'neovim config exists!' && exit ) \
    || ( mkdir -pv ~/.config/nvim ; cp -rvf $SOURCE/* $DEST )
}

get_plugs() {
  plugs=($( cat plugins ))

  [[ -d ~/.config/nvim/ ]]&& \
    ( echo "~/.config/nvim/ exists!" && exit ) \
    || ( mkdir -vp ~/.config/nvim/plugs )

  for p in ${plugs[@]}
  do
    git clone "https://github.com/$p" "$HOME/.config/nvim/plugs/$p" --depth 1
  done
}

install_minimap() {
  arch=$(lscpu|grep -i architecture|awk '{print $2}')
  declare -A paths
  . $SOURCE/.minimap/paths

  for p in "${!paths[@]}"
  do 
    cp -fv $SOURCE/.minimap/$p.vim "${paths[$p]}"
  done

  [[ $arch ]] && sudo cp .minimap/$arch /usr/sbin/code-minimap
}

install_neovim() {
  pushd /tmp/
  ( curl -L $url -o nvim.appimage && \
    ( chmod u+x nvim.appimage ) && \
    ( ./nvim.appimage --appimage-extract ) && \
    ( sudo cp -rf ./squashfs-root/usr/ /) && \
    (sudo rm -rf ./squashfs-root nvim.appimage)
  ) && ( echo 'neovim Installed!' )
  popd
}

[[ $# == 0 ]] && \
  ( copy_config && \
    get_plugs && \
    install_neovim && \
    install_minimap )

case $1 in 
  -c|--config)
    copy_config
  ;;
  -p|--plugins)
    get_plugs
  ;;
  -h|--help)
    printf "bootstraps:\n  -c copy configuration only\n  -p config and plugins\n  default: install neovim, copy config, plugins, and install code-minimap\n"
  ;;
esac
